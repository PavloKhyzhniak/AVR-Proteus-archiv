;-----------------------------
; Для передачи данных по USART
; в главном цикле необходимо вставить код
; приведенный ниже
; в нем разрешаеться прерывание по опустошению буфера
; USARTa, разрешена работа передатчика
; выдан сигнал на схему RS485
; метка metkaTX должна быть установлена
; установка метки в 0 означает окончание передачи
; данных из буфера передатчика(ответа на запрос)
;-----------------------------
;;возвращаем данные
;		sbi	PORTD, PortX
;		ldi	temp, 0b00101000
;		out	UCSRB, temp
;		nop
;g1:
;		cpi	metkaTX, 0
;		brne	g1
;-----------------------------

USART_UDRE:
; сохраняем значение регистра состояния в стеке
		push	temp
		in	temp, SREG
		push	temp
; проверяем не новый ли ответ даем
; не новые ли данные на передачу
		cpi	metkaTX, 0
		brne	TX_old
; инициализация буфера отправки данных
TX_new:
; устанавливаем метку что отправка началась
		ldi	metkaTX, 1
; включаем RS485
		sbi	PORTD, PortX
; собственно инициализация адресса загрузки данных из ОЗУ		
		ldi	zh, HIGH(dataTx_buf)
		ldi	zl, LOW(dataTx_buf)
TX_old:	
; загрузить косвенно инкрементировав впоследствии	
		ld	data, Z+ 
; выдать данные на USART
		out	UDR, data
		nop	
; ожидаем опустошение буфера	
end_UDRE:
		sbis	UCSRA, UDRE
		rjmp	end_UDRE
; проверяем, последний байт не равен ли
; УП(управляющей последовательности) конец передачи
		cpi	data, END_DATA;
		brne	finTX
; ждем окончание передачи, если последний байт передачи
; загружен в буфер USARTa				
end_TXC:		
		sbis	UCSRA, TXC
		rjmp	end_TXC
; сброс флага передача завершена
		in	temp, UCSRA
		ori	temp, 1<<TXC
		out	UCSRA, temp	
; инициализируем USATR на прием		
		ldi temp, 0b10011000
		out UCSRB, temp
; выдать сигнал прием на RS485
		cbi PORTD, PortX
; сброс метки, сигнал на окончание передачи
		clr metkaTX		
; организуем паузу 1сек
; для разделения посылок
		ldi pausa, 8
l1:		ldi loop, 201
l2:		rcall Delay
		dec loop
		brne l2
		dec pausa
		brne l1
; завершение передачи
finTX:	
; восстановление регистров из стека	
		pop temp
		out SREG, temp
		pop temp

		reti
;-------------------------------
